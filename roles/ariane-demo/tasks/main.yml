---
- name: ensure git is at the latest version (dnf)
  dnf: name=git state=latest
  when: (provisioning and ansible_pkg_mgr == 'dnf' and docker_build)

- name: ensure git is at the latest version (yum)
  yum: name=git state=latest
  when: (provisioning and ansible_pkg_mgr == 'yum' and docker_build)

- name: ensure git is at the latest version (apt)
  apt: name=git state=latest
  when: (provisioning and ansible_pkg_mgr == 'apt' and docker_build) 

- name: add sslVerify=false
  command: git config --global http.sslverify "false"
  when: (provisioning and docker_build)

- name: add /ECHINOPSII/ansible directory
  command: mkdir -p /ECHINOPSII/ansible
  ignore_errors: yes
  when: (provisioning and docker_build)

- name: clone net.echinopsii.docker.base
  git: repo=http://stash.echinopsii.net/scm/necii/docker.base.git dest=/ECHINOPSII/ansible/docker.base clone=yes update=yes
  when: (provisioning and docker_build)

- name: chown /ECHINOPSII/ansible
  command: chown -R ansible.ansible /ECHINOPSII/ansible
  when: (provisioning and docker_build)

- name: remove ariane idm docker container
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeIDMNodeName']}}"
   image: mariadb
   state: absent
  when: not provisioning

- name: run ariane idm docker container
  docker_container: 
   name: "{{hostvars[inventory_hostname]['arianeIDMNodeName']}}"
   hostname: "{{hostvars[inventory_hostname]['arianeIDMNodeName'] + '.' + ansible_fqdn}}"
   ports:
   - "0.0.0.0:3316:3306"
   image: mariadb 
   env:
       MYSQL_ROOT_PASSWORD: "YHN444rty"
       MYSQL_USER: "ariane"
       MYSQL_PASSWORD: "password"
       MYSQL_DATABASE: "ariane_idm"
       ARIANE_OS_TYPE_NAME: "Linux Debian 8"
       ARIANE_OS_TYPE_ARCHITECTURE: "x86_64"
       ARIANE_OS_TYPE_SUPPORTING_COMPANY_NAME: "Debian"
       ARIANE_OS_TYPE_SUPPORTING_COMPANY_DESCRIPTION: "Debian Community"
       ARIANE_TEAM_NAME: "ARdev"
       ARIANE_TEAM_COLOR_CODE: "cc6c4a"
       ARIANE_TEAM_DESCRIPTION: "Ariane DEV team"
       ARIANE_ENV_NAME: "DEV"
       ARIANE_ENV_COLOR_CODE: "DEV environment"
       ARIANE_ENV_DESCRIPTION: "cb6c4a"
  when: (provisioning and not docker_overlay)

- name: remove ariane directory docker container
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeIDMNodeName']}}"
   image: mariadb
   state: absent
  when: not provisioning

- name: run ariane directory docker container
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeDIRNodeName']}}"
   hostname: "{{hostvars[inventory_hostname]['arianeDIRNodeName'] + '.' + ansible_fqdn}}"
   ports:
   - "0.0.0.0:3326:3306"
   image: mariadb
   env:
       MYSQL_ROOT_PASSWORD: "YHN444rty"
       MYSQL_USER: "ariane"
       MYSQL_PASSWORD: "password"
       MYSQL_DATABASE: "ariane_directory"
       ARIANE_OS_TYPE_NAME: "Linux Debian 8"
       ARIANE_OS_TYPE_ARCHITECTURE: "x86_64"
       ARIANE_OS_TYPE_SUPPORTING_COMPANY_NAME: "Debian"
       ARIANE_OS_TYPE_SUPPORTING_COMPANY_DESCRIPTION: "Debian Community"
       ARIANE_TEAM_NAME: "ARdev"
       ARIANE_TEAM_COLOR_CODE: "cc6c4a"
       ARIANE_TEAM_DESCRIPTION: "Ariane DEV team"
       ARIANE_ENV_NAME: "DEV"
       ARIANE_ENV_COLOR_CODE: "DEV environment"
       ARIANE_ENV_DESCRIPTION: "cb6c4a"
  when: (provisioning and not docker_overlay)

- name: remove ariane nats docker container
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeNATSNodeName']}}"
   image: nats
   state: absent 
  when: not provisioning

- name: run ariane nats docker container 
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeNATSNodeName']}}"
   hostname: "{{hostvars[inventory_hostname]['arianeNATSNodeName'] + '.' + ansible_fqdn}}"
   entrypoint: 
   - /gnatsd
   - -c
   - /gnatsd.conf
   - --user
   - ariane
   - --pass
   - password
   ports:
   - "0.0.0.0:8222:8222"
   - "0.0.0.0:4222:4222"
   image: nats
   env:
       ARIANE_OS_TYPE_NAME: "Linux Debian 8"
       ARIANE_OS_TYPE_ARCHITECTURE: "x86_64"
       ARIANE_OS_TYPE_SUPPORTING_COMPANY_NAME: "Debian"
       ARIANE_OS_TYPE_SUPPORTING_COMPANY_DESCRIPTION: "Debian Community"
       ARIANE_TEAM_NAME: "ARdev"
       ARIANE_TEAM_COLOR_CODE: "cc6c4a"
       ARIANE_TEAM_DESCRIPTION: "Ariane DEV team"
       ARIANE_ENV_NAME: "DEV"
       ARIANE_ENV_COLOR_CODE: "DEV environment"
       ARIANE_ENV_DESCRIPTION: "cb6c4a"
  when: (provisioning and not docker_overlay)

- name: remove ariane mms docker container
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeMMSNodeName']}}"
   image: echinopsii/ariane.community:mms.SNAPSHOT
   state: absent
  when: not provisioning

- name: run ariane mms docker container
  docker_container:
    name: "{{hostvars[inventory_hostname]['arianeMMSNodeName']}}"
    image: echinopsii/ariane.community:mms.SNAPSHOT
    env:
        ARIANE_NATS_HOST: "{{ansible_fqdn}}"
        ARIANE_MOM_USER: "ariane"
        ARIANE_MOM_PASSWORD: "password"
    ports:
    - "0.0.0.0:7474:7474"
  when: (provisioning and not docker_overlay)

- name: remove ariane frt docker container
  docker_container:
   name: "{{hostvars[inventory_hostname]['arianeFRTNodeName']}}"
   image: echinopsii/ariane.community:frt.SNAPSHOT
   state: absent
  when: not provisioning

# TODO: raise this error to ansible community
# - name: pull docker image
#   docker_image:
#    name: echinopsii/ariane.community:frt.SNAPSHOT

- name: pull docker image
  shell: docker pull echinopsii/ariane.community:frt.SNAPSHOT
  when: provisioning

- name: run ariane frt docker container
  docker_container:
    name: "{{hostvars[inventory_hostname]['arianeFRTNodeName']}}"
    image: echinopsii/ariane.community:frt.SNAPSHOT
    env:
        ARIANE_IDM_HOST: "ariane-idm"
        ARIANE_DIRECTORY_HOST: "ariane-dir"
        ARIANE_NATS_HOST: "{{ansible_fqdn}}"
        ARIANE_MOM_USER: "ariane"
        ARIANE_MOM_PASSWORD: "password"
    ports:
    - "0.0.0.0:6969:6969"
    links:
    - ariane-idm:ariane-idm
    - ariane-dir:ariane-dir
  when: (provisioning and not docker_overlay)

- name: clean docker env
  command: /usr/bin/dockerKlean
  ignore_errors: yes
